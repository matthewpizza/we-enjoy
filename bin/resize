#!/bin/bash

resize_image() {
	local output_path=$(dirname `dirname $1`)
	local filename=$(basename $1)

	local dimensions=$(sips -g pixelWidth -g pixelHeight $1)
	local width=$(echo -e $"$dimensions" | awk '/pixelWidth:/{print $2}')
	local height=$(echo -e $"$dimensions" | awk '/pixelHeight:/{print $2}')
	local ratio=$(echo $width $height | awk '{ print $2 / $1 }')

	if [ $(echo "$ratio > 1" | bc) -eq 1 ]; then
		# Pad portrait images to make landscape
		# Has a black background to match the site background
		# TODO: Maybe make transparent if PNG & GIF?
		sips $file --resampleHeight 400 --out "$output_path/$filename"
		sips "$output_path/$filename" --padToHeightWidth 400 800 --padColor 000000 --out "$output_path/$filename"
		return
	fi

	local scale=$(echo $width | awk '{ print 800 / $1 }')
	local height_scaled=$(echo $height $scale | awk '{ print $1 * $2 }')

	if [ $(echo "$height_scaled < 400" | bc) -eq 1 ]; then
		# Resize to height
		sips $file --resampleHeight 400 --out "$output_path/$filename"
	else
		# Resize to width
		sips $file --resampleWidth 800 --out "$output_path/$filename"
	fi

	sips "$output_path/$filename" --cropToHeightWidth 400 800 --out "$output_path/$filename"
}

echo -n "Resizing new images"

for i in {1..3}
do
	sleep 0.3
	echo -n '.'
done

# where are we
pushd `dirname $0` > /dev/null
	project_root=$(dirname `pwd`)
popd > /dev/null

# cd original assets directory
cd "$project_root/assets/_"

# Set $IFS variable for filenames with spaces
# http://www.cyberciti.biz/tips/handling-filenames-with-spaces-in-bash.html
SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

# find file modified today
# --[cached|deleted|others|ignored|stage|unmerged|killed|modified]
for file in $(git ls-files --others . | grep -E ".gif|.png|.jpg|.jpeg"); do
	sleep 0.5
	echo -en "\rResizing $file"

	resize_image $file &> /dev/null

	# Async
	open -a ImageOptim ../$file
done

# restore
IFS=$SAVEIFS

echo -en "\r"
